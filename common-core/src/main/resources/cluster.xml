<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2017 Red Hat, Inc.
  ~
  ~ Red Hat licenses this file to you under the Apache License, version 2.0
  ~ (the "License"); you may not use this file except in compliance with the
  ~ License.  You may obtain a copy of the License at:
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  ~ WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
  ~ License for the specific language governing permissions and limitations
  ~ under the License.
  -->

<hazelcast xmlns="http://www.hazelcast.com/schema/config"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://www.hazelcast.com/schema/config
           https://www.hazelcast.com/schema/config/hazelcast-config-4.2.xsd">

    <multimap name="__vertx.subs">
        <backup-count>1</backup-count>
        <value-collection-type>SET</value-collection-type>
    </multimap>

    <map name="__vertx.haInfo">
        <backup-count>1</backup-count>
    </map>

    <map name="__vertx.nodeInfo">
        <backup-count>1</backup-count>
    </map>

    <cp-subsystem>
        <cp-member-count>0</cp-member-count>
        <semaphores>
            <semaphore>
                <name>__vertx.*</name>
                <jdk-compatible>false</jdk-compatible>
                <initial-permits>1</initial-permits>
            </semaphore>
        </semaphores>
    </cp-subsystem>
    <network>
        <join>
            <multicast enabled="false"/>
            <tcp-ip enabled="false"/>
            <kubernetes enabled="true">
                <service-name>example-service</service-name>
                <namespace>default</namespace>
                <!-- 当设置为 true 时，Hazelcast 会尝试解析尚未准备好的地址。这意味着，即使某些 Pod 尚未完全启动，Hazelcast 也会尝试连接到它们。这对于加速集群启动过程可能很有用 -->
                <resolve-not-ready-addresses>true</resolve-not-ready-addresses>
            </kubernetes>
        </join>
    </network>

    <properties>
        <property name="hazelcast.logging.type">log4j2</property>
    </properties>
</hazelcast>
